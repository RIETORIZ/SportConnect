# Generated by Django 5.2 on 2025-04-24 06:29

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password_hash', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Matches',
            fields=[
                ('match_id', models.AutoField(primary_key=True, serialize=False)),
                ('match_date', models.DateField()),
                ('match_time', models.TimeField()),
            ],
            options={
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='Sports',
            fields=[
                ('sport_id', models.AutoField(primary_key=True, serialize=False)),
                ('sport_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sports',
            },
        ),
        migrations.CreateModel(
            name='SportsFields',
            fields=[
                ('field_id', models.AutoField(primary_key=True, serialize=False)),
                ('field_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('field_image', models.TextField(blank=True, null=True)),
                ('rent_price_per_hour', models.DecimalField(decimal_places=2, max_digits=10)),
                ('suitable_sports', models.CharField(max_length=200)),
                ('available_for_female', models.BooleanField(default=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('review', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'sports_fields',
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('player_id', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='Coaches',
            fields=[
                ('user_id', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.users')),
                ('specialization', models.CharField(blank=True, max_length=200, null=True)),
                ('years_of_experience', models.IntegerField(blank=True, null=True)),
                ('certifications', models.CharField(blank=True, max_length=200, null=True)),
                ('review', models.FloatField(default=0.0)),
                ('rating', models.FloatField(default=0.0)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'coaches',
            },
        ),
        migrations.CreateModel(
            name='Players',
            fields=[
                ('user_id', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.users')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('preferred_sports', models.CharField(blank=True, max_length=100, null=True)),
                ('experience_level', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Renters',
            fields=[
                ('user_id', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.users')),
                ('business_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_info', models.CharField(blank=True, max_length=200, null=True)),
                ('fields_owned', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'renters',
            },
        ),
        migrations.CreateModel(
            name='DirectMessages',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_text', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('receiver_id', models.ForeignKey(db_column='receiver_id', on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='api.users')),
                ('sender_id', models.ForeignKey(db_column='sender_id', on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='api.users')),
            ],
            options={
                'db_table': 'direct_messages',
            },
        ),
        migrations.CreateModel(
            name='ReservationTables',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reserved_at', models.DateField()),
                ('match_id', models.ForeignKey(blank=True, db_column='match_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.matches')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.users')),
                ('field_id', models.ForeignKey(db_column='field_id', on_delete=django.db.models.deletion.CASCADE, to='api.sportsfields')),
            ],
            options={
                'db_table': 'reservation_tables',
            },
        ),
        migrations.AddField(
            model_name='matches',
            name='field_id',
            field=models.ForeignKey(db_column='field_id', on_delete=django.db.models.deletion.CASCADE, to='api.sportsfields'),
        ),
        migrations.CreateModel(
            name='FieldBookings',
            fields=[
                ('booking_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_date', models.DateField()),
                ('booking_start_time', models.TimeField()),
                ('booking_end_time', models.TimeField()),
                ('payment_method', models.CharField(max_length=50)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.users')),
                ('field_id', models.ForeignKey(db_column='field_id', on_delete=django.db.models.deletion.CASCADE, to='api.sportsfields')),
            ],
            options={
                'db_table': 'field_bookings',
            },
        ),
        migrations.AddField(
            model_name='matches',
            name='team1_id',
            field=models.ForeignKey(db_column='team1_id', on_delete=django.db.models.deletion.CASCADE, related_name='team1_matches', to='api.teams'),
        ),
        migrations.AddField(
            model_name='matches',
            name='team2_id',
            field=models.ForeignKey(db_column='team2_id', on_delete=django.db.models.deletion.CASCADE, related_name='team2_matches', to='api.teams'),
        ),
        migrations.CreateModel(
            name='TrainingSessions',
            fields=[
                ('session_id', models.AutoField(primary_key=True, serialize=False)),
                ('training_date', models.DateField()),
                ('training_time', models.TimeField()),
                ('field_id', models.ForeignKey(db_column='field_id', on_delete=django.db.models.deletion.CASCADE, to='api.sportsfields')),
                ('team_id', models.ForeignKey(db_column='team_id', on_delete=django.db.models.deletion.CASCADE, to='api.teams')),
                ('coach_id', models.ForeignKey(db_column='coach_id', on_delete=django.db.models.deletion.CASCADE, to='api.coaches')),
            ],
            options={
                'db_table': 'training_sessions',
            },
        ),
        migrations.AddField(
            model_name='teams',
            name='coach_id',
            field=models.ForeignKey(blank=True, db_column='coach_id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.coaches'),
        ),
        migrations.AddField(
            model_name='sportsfields',
            name='renter_id',
            field=models.ForeignKey(db_column='renter_id', on_delete=django.db.models.deletion.CASCADE, to='api.renters'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('team_member_id', models.AutoField(primary_key=True, serialize=False)),
                ('joined_at', models.DateField()),
                ('team_id', models.ForeignKey(db_column='team_id', on_delete=django.db.models.deletion.CASCADE, to='api.teams')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to='api.players')),
            ],
            options={
                'db_table': 'team_member',
                'unique_together': {('team_id', 'user_id')},
            },
        ),
    ]
